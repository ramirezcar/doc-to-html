{"ast":null,"code":"var _ = require(\"underscore\");\n\nvar html = require(\"../html\");\n\nexports.topLevelElement = topLevelElement;\nexports.elements = elements;\nexports.element = element;\n\nfunction topLevelElement(tagName, attributes) {\n  return elements([element(tagName, attributes, {\n    fresh: true\n  })]);\n}\n\nfunction elements(elementStyles) {\n  return new HtmlPath(elementStyles.map(function (elementStyle) {\n    if (_.isString(elementStyle)) {\n      return element(elementStyle);\n    } else {\n      return elementStyle;\n    }\n  }));\n}\n\nfunction HtmlPath(elements) {\n  this._elements = elements;\n}\n\nHtmlPath.prototype.wrap = function wrap(children) {\n  var result = children();\n\n  for (var index = this._elements.length - 1; index >= 0; index--) {\n    result = this._elements[index].wrapNodes(result);\n  }\n\n  return result;\n};\n\nfunction element(tagName, attributes, options) {\n  options = options || {};\n  return new Element(tagName, attributes, options);\n}\n\nfunction Element(tagName, attributes, options) {\n  var tagNames = {};\n\n  if (_.isArray(tagName)) {\n    tagName.forEach(function (tagName) {\n      tagNames[tagName] = true;\n    });\n    tagName = tagName[0];\n  } else {\n    tagNames[tagName] = true;\n  }\n\n  this.tagName = tagName;\n  this.tagNames = tagNames;\n  this.attributes = attributes || {};\n  this.fresh = options.fresh;\n  this.separator = options.separator;\n}\n\nElement.prototype.matchesElement = function (element) {\n  return this.tagNames[element.tagName] && _.isEqual(this.attributes || {}, element.attributes || {});\n};\n\nElement.prototype.wrap = function wrap(generateNodes) {\n  return this.wrapNodes(generateNodes());\n};\n\nElement.prototype.wrapNodes = function wrapNodes(nodes) {\n  return [html.elementWithTag(this, nodes)];\n};\n\nexports.empty = elements([]);\nexports.ignore = {\n  wrap: function wrap() {\n    return [];\n  }\n};","map":{"version":3,"sources":["C:/Users/Carlos/Desktop/Coding/doc-to-html/node_modules/mammoth/lib/styles/html-paths.js"],"names":["_","require","html","exports","topLevelElement","elements","element","tagName","attributes","fresh","elementStyles","HtmlPath","map","elementStyle","isString","_elements","prototype","wrap","children","result","index","length","wrapNodes","options","Element","tagNames","isArray","forEach","separator","matchesElement","isEqual","generateNodes","nodes","elementWithTag","empty","ignore"],"mappings":"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","sourcesContent":["var _ = require(\"underscore\");\n\nvar html = require(\"../html\");\n\nexports.topLevelElement = topLevelElement;\nexports.elements = elements;\nexports.element = element;\n\nfunction topLevelElement(tagName, attributes) {\n    return elements([element(tagName, attributes, {fresh: true})]);\n}\n\nfunction elements(elementStyles) {\n    return new HtmlPath(elementStyles.map(function(elementStyle) {\n        if (_.isString(elementStyle)) {\n            return element(elementStyle);\n        } else {\n            return elementStyle;\n        }\n    }));\n}\n\nfunction HtmlPath(elements) {\n    this._elements = elements;\n}\n\nHtmlPath.prototype.wrap = function wrap(children) {\n    var result = children();\n    for (var index = this._elements.length - 1; index >= 0; index--) {\n        result = this._elements[index].wrapNodes(result);\n    }\n    return result;\n};\n\nfunction element(tagName, attributes, options) {\n    options = options || {};\n    return new Element(tagName, attributes, options);\n}\n\nfunction Element(tagName, attributes, options) {\n    var tagNames = {};\n    if (_.isArray(tagName)) {\n        tagName.forEach(function(tagName) {\n            tagNames[tagName] = true;\n        });\n        tagName = tagName[0];\n    } else {\n        tagNames[tagName] = true;\n    }\n    \n    this.tagName = tagName;\n    this.tagNames = tagNames;\n    this.attributes = attributes || {};\n    this.fresh = options.fresh;\n    this.separator = options.separator;\n}\n\nElement.prototype.matchesElement = function(element) {\n    return this.tagNames[element.tagName] && _.isEqual(this.attributes || {}, element.attributes || {});\n};\n\nElement.prototype.wrap = function wrap(generateNodes) {\n    return this.wrapNodes(generateNodes());\n};\n\nElement.prototype.wrapNodes = function wrapNodes(nodes) {\n    return [html.elementWithTag(this, nodes)];\n};\n\nexports.empty = elements([]);\nexports.ignore = {\n    wrap: function() {\n        return [];\n    }\n};\n"]},"metadata":{},"sourceType":"script"}