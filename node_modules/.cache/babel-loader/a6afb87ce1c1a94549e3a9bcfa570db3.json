{"ast":null,"code":"exports.Parser = require(\"./lib/parser\").Parser;\nexports.rules = require(\"./lib/rules\");\nexports.errors = require(\"./lib/errors\");\nexports.results = require(\"./lib/parsing-results\");\nexports.StringSource = require(\"./lib/StringSource\");\nexports.Token = require(\"./lib/Token\");\nexports.bottomUp = require(\"./lib/bottom-up\");\nexports.RegexTokeniser = require(\"./lib/regex-tokeniser\").RegexTokeniser;\n\nexports.rule = function (ruleBuilder) {\n  var rule;\n  return function (input) {\n    if (!rule) {\n      rule = ruleBuilder();\n    }\n\n    return rule(input);\n  };\n};","map":{"version":3,"sources":["C:/Users/Carlos/Desktop/Coding/doc-to-html/node_modules/lop/index.js"],"names":["exports","Parser","require","rules","errors","results","StringSource","Token","bottomUp","RegexTokeniser","rule","ruleBuilder","input"],"mappings":"AAAAA,OAAO,CAACC,MAAR,GAAiBC,OAAO,CAAC,cAAD,CAAP,CAAwBD,MAAzC;AACAD,OAAO,CAACG,KAAR,GAAgBD,OAAO,CAAC,aAAD,CAAvB;AACAF,OAAO,CAACI,MAAR,GAAiBF,OAAO,CAAC,cAAD,CAAxB;AACAF,OAAO,CAACK,OAAR,GAAkBH,OAAO,CAAC,uBAAD,CAAzB;AACAF,OAAO,CAACM,YAAR,GAAuBJ,OAAO,CAAC,oBAAD,CAA9B;AACAF,OAAO,CAACO,KAAR,GAAgBL,OAAO,CAAC,aAAD,CAAvB;AACAF,OAAO,CAACQ,QAAR,GAAmBN,OAAO,CAAC,iBAAD,CAA1B;AACAF,OAAO,CAACS,cAAR,GAAyBP,OAAO,CAAC,uBAAD,CAAP,CAAiCO,cAA1D;;AAEAT,OAAO,CAACU,IAAR,GAAe,UAASC,WAAT,EAAsB;AACjC,MAAID,IAAJ;AACA,SAAO,UAASE,KAAT,EAAgB;AACnB,QAAI,CAACF,IAAL,EAAW;AACPA,MAAAA,IAAI,GAAGC,WAAW,EAAlB;AACH;;AACD,WAAOD,IAAI,CAACE,KAAD,CAAX;AACH,GALD;AAMH,CARD","sourcesContent":["exports.Parser = require(\"./lib/parser\").Parser;\nexports.rules = require(\"./lib/rules\");\nexports.errors = require(\"./lib/errors\");\nexports.results = require(\"./lib/parsing-results\");\nexports.StringSource = require(\"./lib/StringSource\");\nexports.Token = require(\"./lib/Token\");\nexports.bottomUp = require(\"./lib/bottom-up\");\nexports.RegexTokeniser = require(\"./lib/regex-tokeniser\").RegexTokeniser;\n\nexports.rule = function(ruleBuilder) {\n    var rule;\n    return function(input) {\n        if (!rule) {\n            rule = ruleBuilder();\n        }\n        return rule(input);\n    };\n};\n"]},"metadata":{},"sourceType":"script"}