{"ast":null,"code":"\"use strict\";\n\nmodule.exports = function (Promise, PromiseArray, debug) {\n  var PromiseInspection = Promise.PromiseInspection;\n\n  var util = require(\"./util\");\n\n  function SettledPromiseArray(values) {\n    this.constructor$(values);\n  }\n\n  util.inherits(SettledPromiseArray, PromiseArray);\n\n  SettledPromiseArray.prototype._promiseResolved = function (index, inspection) {\n    this._values[index] = inspection;\n    var totalResolved = ++this._totalResolved;\n\n    if (totalResolved >= this._length) {\n      this._resolve(this._values);\n\n      return true;\n    }\n\n    return false;\n  };\n\n  SettledPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    var ret = new PromiseInspection();\n    ret._bitField = 33554432;\n    ret._settledValueField = value;\n    return this._promiseResolved(index, ret);\n  };\n\n  SettledPromiseArray.prototype._promiseRejected = function (reason, index) {\n    var ret = new PromiseInspection();\n    ret._bitField = 16777216;\n    ret._settledValueField = reason;\n    return this._promiseResolved(index, ret);\n  };\n\n  Promise.settle = function (promises) {\n    debug.deprecated(\".settle()\", \".reflect()\");\n    return new SettledPromiseArray(promises).promise();\n  };\n\n  Promise.prototype.settle = function () {\n    return Promise.settle(this);\n  };\n};","map":{"version":3,"sources":["C:/Users/Carlos/Desktop/Coding/doc-to-html/node_modules/bluebird/js/release/settle.js"],"names":["module","exports","Promise","PromiseArray","debug","PromiseInspection","util","require","SettledPromiseArray","values","constructor$","inherits","prototype","_promiseResolved","index","inspection","_values","totalResolved","_totalResolved","_length","_resolve","_promiseFulfilled","value","ret","_bitField","_settledValueField","_promiseRejected","reason","settle","promises","deprecated","promise"],"mappings":"AAAA;;AACAA,MAAM,CAACC,OAAP,GACI,UAASC,OAAT,EAAkBC,YAAlB,EAAgCC,KAAhC,EAAuC;AAC3C,MAAIC,iBAAiB,GAAGH,OAAO,CAACG,iBAAhC;;AACA,MAAIC,IAAI,GAAGC,OAAO,CAAC,QAAD,CAAlB;;AAEA,WAASC,mBAAT,CAA6BC,MAA7B,EAAqC;AACjC,SAAKC,YAAL,CAAkBD,MAAlB;AACH;;AACDH,EAAAA,IAAI,CAACK,QAAL,CAAcH,mBAAd,EAAmCL,YAAnC;;AAEAK,EAAAA,mBAAmB,CAACI,SAApB,CAA8BC,gBAA9B,GAAiD,UAAUC,KAAV,EAAiBC,UAAjB,EAA6B;AAC1E,SAAKC,OAAL,CAAaF,KAAb,IAAsBC,UAAtB;AACA,QAAIE,aAAa,GAAG,EAAE,KAAKC,cAA3B;;AACA,QAAID,aAAa,IAAI,KAAKE,OAA1B,EAAmC;AAC/B,WAAKC,QAAL,CAAc,KAAKJ,OAAnB;;AACA,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH,GARD;;AAUAR,EAAAA,mBAAmB,CAACI,SAApB,CAA8BS,iBAA9B,GAAkD,UAAUC,KAAV,EAAiBR,KAAjB,EAAwB;AACtE,QAAIS,GAAG,GAAG,IAAIlB,iBAAJ,EAAV;AACAkB,IAAAA,GAAG,CAACC,SAAJ,GAAgB,QAAhB;AACAD,IAAAA,GAAG,CAACE,kBAAJ,GAAyBH,KAAzB;AACA,WAAO,KAAKT,gBAAL,CAAsBC,KAAtB,EAA6BS,GAA7B,CAAP;AACH,GALD;;AAMAf,EAAAA,mBAAmB,CAACI,SAApB,CAA8Bc,gBAA9B,GAAiD,UAAUC,MAAV,EAAkBb,KAAlB,EAAyB;AACtE,QAAIS,GAAG,GAAG,IAAIlB,iBAAJ,EAAV;AACAkB,IAAAA,GAAG,CAACC,SAAJ,GAAgB,QAAhB;AACAD,IAAAA,GAAG,CAACE,kBAAJ,GAAyBE,MAAzB;AACA,WAAO,KAAKd,gBAAL,CAAsBC,KAAtB,EAA6BS,GAA7B,CAAP;AACH,GALD;;AAOArB,EAAAA,OAAO,CAAC0B,MAAR,GAAiB,UAAUC,QAAV,EAAoB;AACjCzB,IAAAA,KAAK,CAAC0B,UAAN,CAAiB,WAAjB,EAA8B,YAA9B;AACA,WAAO,IAAItB,mBAAJ,CAAwBqB,QAAxB,EAAkCE,OAAlC,EAAP;AACH,GAHD;;AAKA7B,EAAAA,OAAO,CAACU,SAAR,CAAkBgB,MAAlB,GAA2B,YAAY;AACnC,WAAO1B,OAAO,CAAC0B,MAAR,CAAe,IAAf,CAAP;AACH,GAFD;AAGC,CAzCD","sourcesContent":["\"use strict\";\nmodule.exports =\n    function(Promise, PromiseArray, debug) {\nvar PromiseInspection = Promise.PromiseInspection;\nvar util = require(\"./util\");\n\nfunction SettledPromiseArray(values) {\n    this.constructor$(values);\n}\nutil.inherits(SettledPromiseArray, PromiseArray);\n\nSettledPromiseArray.prototype._promiseResolved = function (index, inspection) {\n    this._values[index] = inspection;\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= this._length) {\n        this._resolve(this._values);\n        return true;\n    }\n    return false;\n};\n\nSettledPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    var ret = new PromiseInspection();\n    ret._bitField = 33554432;\n    ret._settledValueField = value;\n    return this._promiseResolved(index, ret);\n};\nSettledPromiseArray.prototype._promiseRejected = function (reason, index) {\n    var ret = new PromiseInspection();\n    ret._bitField = 16777216;\n    ret._settledValueField = reason;\n    return this._promiseResolved(index, ret);\n};\n\nPromise.settle = function (promises) {\n    debug.deprecated(\".settle()\", \".reflect()\");\n    return new SettledPromiseArray(promises).promise();\n};\n\nPromise.prototype.settle = function () {\n    return Promise.settle(this);\n};\n};\n"]},"metadata":{},"sourceType":"script"}