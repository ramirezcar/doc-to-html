{"ast":null,"code":"var _ = require(\"underscore\");\n\nvar promises = require(\"../promises\");\n\nvar xml = require(\"../xml\");\n\nexports.read = read;\nexports.readXmlFromZipFile = readXmlFromZipFile;\nvar xmlNamespaceMap = {\n  \"http://schemas.openxmlformats.org/wordprocessingml/2006/main\": \"w\",\n  \"http://schemas.openxmlformats.org/officeDocument/2006/relationships\": \"r\",\n  \"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing\": \"wp\",\n  \"http://schemas.openxmlformats.org/drawingml/2006/main\": \"a\",\n  \"http://schemas.openxmlformats.org/drawingml/2006/picture\": \"pic\",\n  \"http://schemas.openxmlformats.org/package/2006/content-types\": \"content-types\",\n  \"urn:schemas-microsoft-com:vml\": \"v\",\n  \"http://schemas.openxmlformats.org/markup-compatibility/2006\": \"mc\",\n  \"urn:schemas-microsoft-com:office:word\": \"office-word\"\n};\n\nfunction read(xmlString) {\n  return xml.readString(xmlString, xmlNamespaceMap).then(function (document) {\n    return collapseAlternateContent(document)[0];\n  });\n}\n\nfunction readXmlFromZipFile(docxFile, path) {\n  if (docxFile.exists(path)) {\n    return docxFile.read(path, \"utf-8\").then(stripUtf8Bom).then(read);\n  } else {\n    return promises.resolve(null);\n  }\n}\n\nfunction stripUtf8Bom(xmlString) {\n  return xmlString.replace(/^\\uFEFF/g, '');\n}\n\nfunction collapseAlternateContent(node) {\n  if (node.type === \"element\") {\n    if (node.name === \"mc:AlternateContent\") {\n      return node.first(\"mc:Fallback\").children;\n    } else {\n      node.children = _.flatten(node.children.map(collapseAlternateContent, true));\n      return [node];\n    }\n  } else {\n    return [node];\n  }\n}","map":{"version":3,"sources":["C:/Users/Carlos/Desktop/Coding/doc-to-html/node_modules/mammoth/lib/docx/office-xml-reader.js"],"names":["_","require","promises","xml","exports","read","readXmlFromZipFile","xmlNamespaceMap","xmlString","readString","then","document","collapseAlternateContent","docxFile","path","exists","stripUtf8Bom","resolve","replace","node","type","name","first","children","flatten","map"],"mappings":"AAAA,IAAIA,CAAC,GAAGC,OAAO,CAAC,YAAD,CAAf;;AAEA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,aAAD,CAAtB;;AACA,IAAIE,GAAG,GAAGF,OAAO,CAAC,QAAD,CAAjB;;AAGAG,OAAO,CAACC,IAAR,GAAeA,IAAf;AACAD,OAAO,CAACE,kBAAR,GAA6BA,kBAA7B;AAEA,IAAIC,eAAe,GAAG;AAClB,kEAAgE,GAD9C;AAElB,yEAAuE,GAFrD;AAGlB,4EAA0E,IAHxD;AAIlB,2DAAyD,GAJvC;AAKlB,8DAA4D,KAL1C;AAMlB,kEAAgE,eAN9C;AAOlB,mCAAiC,GAPf;AAQlB,iEAA+D,IAR7C;AASlB,2CAAyC;AATvB,CAAtB;;AAaA,SAASF,IAAT,CAAcG,SAAd,EAAyB;AACrB,SAAOL,GAAG,CAACM,UAAJ,CAAeD,SAAf,EAA0BD,eAA1B,EACFG,IADE,CACG,UAASC,QAAT,EAAmB;AACrB,WAAOC,wBAAwB,CAACD,QAAD,CAAxB,CAAmC,CAAnC,CAAP;AACH,GAHE,CAAP;AAIH;;AAGD,SAASL,kBAAT,CAA4BO,QAA5B,EAAsCC,IAAtC,EAA4C;AACxC,MAAID,QAAQ,CAACE,MAAT,CAAgBD,IAAhB,CAAJ,EAA2B;AACvB,WAAOD,QAAQ,CAACR,IAAT,CAAcS,IAAd,EAAoB,OAApB,EACFJ,IADE,CACGM,YADH,EAEFN,IAFE,CAEGL,IAFH,CAAP;AAGH,GAJD,MAIO;AACH,WAAOH,QAAQ,CAACe,OAAT,CAAiB,IAAjB,CAAP;AACH;AACJ;;AAGD,SAASD,YAAT,CAAsBR,SAAtB,EAAiC;AAC7B,SAAOA,SAAS,CAACU,OAAV,CAAkB,UAAlB,EAA8B,EAA9B,CAAP;AACH;;AAGD,SAASN,wBAAT,CAAkCO,IAAlC,EAAwC;AACpC,MAAIA,IAAI,CAACC,IAAL,KAAc,SAAlB,EAA6B;AACzB,QAAID,IAAI,CAACE,IAAL,KAAc,qBAAlB,EAAyC;AACrC,aAAOF,IAAI,CAACG,KAAL,CAAW,aAAX,EAA0BC,QAAjC;AACH,KAFD,MAEO;AACHJ,MAAAA,IAAI,CAACI,QAAL,GAAgBvB,CAAC,CAACwB,OAAF,CAAUL,IAAI,CAACI,QAAL,CAAcE,GAAd,CAAkBb,wBAAlB,EAA4C,IAA5C,CAAV,CAAhB;AACA,aAAO,CAACO,IAAD,CAAP;AACH;AACJ,GAPD,MAOO;AACH,WAAO,CAACA,IAAD,CAAP;AACH;AACJ","sourcesContent":["var _ = require(\"underscore\");\n\nvar promises = require(\"../promises\");\nvar xml = require(\"../xml\");\n\n\nexports.read = read;\nexports.readXmlFromZipFile = readXmlFromZipFile;\n\nvar xmlNamespaceMap = {\n    \"http://schemas.openxmlformats.org/wordprocessingml/2006/main\": \"w\",\n    \"http://schemas.openxmlformats.org/officeDocument/2006/relationships\": \"r\",\n    \"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing\": \"wp\",\n    \"http://schemas.openxmlformats.org/drawingml/2006/main\": \"a\",\n    \"http://schemas.openxmlformats.org/drawingml/2006/picture\": \"pic\",\n    \"http://schemas.openxmlformats.org/package/2006/content-types\": \"content-types\",\n    \"urn:schemas-microsoft-com:vml\": \"v\",\n    \"http://schemas.openxmlformats.org/markup-compatibility/2006\": \"mc\",\n    \"urn:schemas-microsoft-com:office:word\": \"office-word\"\n};\n\n\nfunction read(xmlString) {\n    return xml.readString(xmlString, xmlNamespaceMap)\n        .then(function(document) {\n            return collapseAlternateContent(document)[0];\n        });\n}\n\n\nfunction readXmlFromZipFile(docxFile, path) {\n    if (docxFile.exists(path)) {\n        return docxFile.read(path, \"utf-8\")\n            .then(stripUtf8Bom)\n            .then(read);\n    } else {\n        return promises.resolve(null);\n    }\n}\n\n\nfunction stripUtf8Bom(xmlString) {\n    return xmlString.replace(/^\\uFEFF/g, '');\n}\n\n\nfunction collapseAlternateContent(node) {\n    if (node.type === \"element\") {\n        if (node.name === \"mc:AlternateContent\") {\n            return node.first(\"mc:Fallback\").children;\n        } else {\n            node.children = _.flatten(node.children.map(collapseAlternateContent, true));\n            return [node];\n        }\n    } else {\n        return [node];\n    }\n}\n"]},"metadata":{},"sourceType":"script"}