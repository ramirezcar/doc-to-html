{"ast":null,"code":"// Generated by CoffeeScript 1.12.7\n(function () {\n  var XMLStringifier,\n      bind = function bind(fn, me) {\n    return function () {\n      return fn.apply(me, arguments);\n    };\n  },\n      hasProp = {}.hasOwnProperty;\n\n  module.exports = XMLStringifier = function () {\n    function XMLStringifier(options) {\n      this.assertLegalChar = bind(this.assertLegalChar, this);\n      var key, ref, value;\n      options || (options = {});\n      this.noDoubleEncoding = options.noDoubleEncoding;\n      ref = options.stringify || {};\n\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[key] = value;\n      }\n    }\n\n    XMLStringifier.prototype.eleName = function (val) {\n      val = '' + val || '';\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.eleText = function (val) {\n      val = '' + val || '';\n      return this.assertLegalChar(this.elEscape(val));\n    };\n\n    XMLStringifier.prototype.cdata = function (val) {\n      val = '' + val || '';\n      val = val.replace(']]>', ']]]]><![CDATA[>');\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.comment = function (val) {\n      val = '' + val || '';\n\n      if (val.match(/--/)) {\n        throw new Error(\"Comment text cannot contain double-hypen: \" + val);\n      }\n\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.raw = function (val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.attName = function (val) {\n      return val = '' + val || '';\n    };\n\n    XMLStringifier.prototype.attValue = function (val) {\n      val = '' + val || '';\n      return this.attEscape(val);\n    };\n\n    XMLStringifier.prototype.insTarget = function (val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.insValue = function (val) {\n      val = '' + val || '';\n\n      if (val.match(/\\?>/)) {\n        throw new Error(\"Invalid processing instruction value: \" + val);\n      }\n\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlVersion = function (val) {\n      val = '' + val || '';\n\n      if (!val.match(/1\\.[0-9]+/)) {\n        throw new Error(\"Invalid version number: \" + val);\n      }\n\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlEncoding = function (val) {\n      val = '' + val || '';\n\n      if (!val.match(/^[A-Za-z](?:[A-Za-z0-9._-])*$/)) {\n        throw new Error(\"Invalid encoding: \" + val);\n      }\n\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlStandalone = function (val) {\n      if (val) {\n        return \"yes\";\n      } else {\n        return \"no\";\n      }\n    };\n\n    XMLStringifier.prototype.dtdPubID = function (val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdSysID = function (val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdElementValue = function (val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdAttType = function (val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdAttDefault = function (val) {\n      if (val != null) {\n        return '' + val || '';\n      } else {\n        return val;\n      }\n    };\n\n    XMLStringifier.prototype.dtdEntityValue = function (val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdNData = function (val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.convertAttKey = '@';\n    XMLStringifier.prototype.convertPIKey = '?';\n    XMLStringifier.prototype.convertTextKey = '#text';\n    XMLStringifier.prototype.convertCDataKey = '#cdata';\n    XMLStringifier.prototype.convertCommentKey = '#comment';\n    XMLStringifier.prototype.convertRawKey = '#raw';\n\n    XMLStringifier.prototype.assertLegalChar = function (str) {\n      var res;\n      res = str.match(/[\\0\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/);\n\n      if (res) {\n        throw new Error(\"Invalid character in string: \" + str + \" at index \" + res.index);\n      }\n\n      return str;\n    };\n\n    XMLStringifier.prototype.elEscape = function (str) {\n      var ampregex;\n      ampregex = this.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\r/g, '&#xD;');\n    };\n\n    XMLStringifier.prototype.attEscape = function (str) {\n      var ampregex;\n      ampregex = this.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/\"/g, '&quot;').replace(/\\t/g, '&#x9;').replace(/\\n/g, '&#xA;').replace(/\\r/g, '&#xD;');\n    };\n\n    return XMLStringifier;\n  }();\n}).call(this);","map":{"version":3,"sources":["C:/Users/Carlos/Desktop/Coding/doc-to-html/node_modules/xmlbuilder/lib/XMLStringifier.js"],"names":["XMLStringifier","bind","fn","me","apply","arguments","hasProp","hasOwnProperty","module","exports","options","assertLegalChar","key","ref","value","noDoubleEncoding","stringify","call","prototype","eleName","val","eleText","elEscape","cdata","replace","comment","match","Error","raw","attName","attValue","attEscape","insTarget","insValue","xmlVersion","xmlEncoding","xmlStandalone","dtdPubID","dtdSysID","dtdElementValue","dtdAttType","dtdAttDefault","dtdEntityValue","dtdNData","convertAttKey","convertPIKey","convertTextKey","convertCDataKey","convertCommentKey","convertRawKey","str","res","index","ampregex"],"mappings":"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","sourcesContent":["// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLStringifier,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    hasProp = {}.hasOwnProperty;\n\n  module.exports = XMLStringifier = (function() {\n    function XMLStringifier(options) {\n      this.assertLegalChar = bind(this.assertLegalChar, this);\n      var key, ref, value;\n      options || (options = {});\n      this.noDoubleEncoding = options.noDoubleEncoding;\n      ref = options.stringify || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[key] = value;\n      }\n    }\n\n    XMLStringifier.prototype.eleName = function(val) {\n      val = '' + val || '';\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.eleText = function(val) {\n      val = '' + val || '';\n      return this.assertLegalChar(this.elEscape(val));\n    };\n\n    XMLStringifier.prototype.cdata = function(val) {\n      val = '' + val || '';\n      val = val.replace(']]>', ']]]]><![CDATA[>');\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.comment = function(val) {\n      val = '' + val || '';\n      if (val.match(/--/)) {\n        throw new Error(\"Comment text cannot contain double-hypen: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.raw = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.attName = function(val) {\n      return val = '' + val || '';\n    };\n\n    XMLStringifier.prototype.attValue = function(val) {\n      val = '' + val || '';\n      return this.attEscape(val);\n    };\n\n    XMLStringifier.prototype.insTarget = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.insValue = function(val) {\n      val = '' + val || '';\n      if (val.match(/\\?>/)) {\n        throw new Error(\"Invalid processing instruction value: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlVersion = function(val) {\n      val = '' + val || '';\n      if (!val.match(/1\\.[0-9]+/)) {\n        throw new Error(\"Invalid version number: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlEncoding = function(val) {\n      val = '' + val || '';\n      if (!val.match(/^[A-Za-z](?:[A-Za-z0-9._-])*$/)) {\n        throw new Error(\"Invalid encoding: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlStandalone = function(val) {\n      if (val) {\n        return \"yes\";\n      } else {\n        return \"no\";\n      }\n    };\n\n    XMLStringifier.prototype.dtdPubID = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdSysID = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdElementValue = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdAttType = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdAttDefault = function(val) {\n      if (val != null) {\n        return '' + val || '';\n      } else {\n        return val;\n      }\n    };\n\n    XMLStringifier.prototype.dtdEntityValue = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdNData = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.convertAttKey = '@';\n\n    XMLStringifier.prototype.convertPIKey = '?';\n\n    XMLStringifier.prototype.convertTextKey = '#text';\n\n    XMLStringifier.prototype.convertCDataKey = '#cdata';\n\n    XMLStringifier.prototype.convertCommentKey = '#comment';\n\n    XMLStringifier.prototype.convertRawKey = '#raw';\n\n    XMLStringifier.prototype.assertLegalChar = function(str) {\n      var res;\n      res = str.match(/[\\0\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/);\n      if (res) {\n        throw new Error(\"Invalid character in string: \" + str + \" at index \" + res.index);\n      }\n      return str;\n    };\n\n    XMLStringifier.prototype.elEscape = function(str) {\n      var ampregex;\n      ampregex = this.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\r/g, '&#xD;');\n    };\n\n    XMLStringifier.prototype.attEscape = function(str) {\n      var ampregex;\n      ampregex = this.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/\"/g, '&quot;').replace(/\\t/g, '&#x9;').replace(/\\n/g, '&#xA;').replace(/\\r/g, '&#xD;');\n    };\n\n    return XMLStringifier;\n\n  })();\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}