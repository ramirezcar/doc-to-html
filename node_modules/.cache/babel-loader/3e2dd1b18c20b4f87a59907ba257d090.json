{"ast":null,"code":"import _slicedToArray from \"C:/Users/Carlos/Desktop/Coding/doc-to-html/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Carlos\\\\Desktop\\\\Coding\\\\doc-to-html\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./styles.css\";\nimport mammoth from \"mammoth\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      renderedDoc = _useState2[0],\n      setRenderedDoc = _useState2[1];\n\n  var h1 = new RegExp(\"<(S*?)[^>]*>.*?</\\\\1>|<.*?/>\");\n\n  function getFirstChild(string) {\n    var output = h1.exec(string); // console.log(\"getFirstChild\", string);\n\n    console.log(\"getFirstChild\", output);\n  }\n\n  function parseWordDocxFile(inputElement) {\n    var files = inputElement.files || [];\n    if (!files.length) return;\n    var file = files[0]; // solo el 1er archivo\n\n    console.time();\n    var reader = new FileReader();\n\n    reader.onloadend = function (event) {\n      var arrayBuffer = reader.result;\n      mammoth.convertToHtml({\n        arrayBuffer: arrayBuffer\n      }).then(function (resultObject) {\n        var rendered = resultObject.value;\n        console.log(rendered);\n        setRenderedDoc(rendered);\n        getFirstChild(rendered);\n      });\n      console.timeEnd();\n      mammoth.extractRawText({\n        arrayBuffer: arrayBuffer\n      }).then(function (resultObject) {// result2.innerHTML = resultObject.value\n        // console.log(resultObject.value);\n      });\n      mammoth.convertToMarkdown({\n        arrayBuffer: arrayBuffer\n      }).then(function (resultObject) {// result3.innerHTML = resultObject.value\n        // console.log(resultObject.value);\n      });\n    };\n\n    reader.readAsArrayBuffer(file);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"DOCX to HTML\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Selecciona un archivo...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: function onChange(e) {\n          return parseWordDocxFile(e.target);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), renderedDoc ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rendered-doc\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tools\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"\",\n          children: \"\\uD83D\\uDD8A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"\",\n          children: \"\\uD83C\\uDFC1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"\",\n          children: \"\\uD83D\\uDCD1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: renderedDoc\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"GhUX8hcJj4sL4VtQCMClqxeu3DI=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Carlos/Desktop/Coding/doc-to-html/src/App.js"],"names":["mammoth","useState","App","renderedDoc","setRenderedDoc","h1","RegExp","getFirstChild","string","output","exec","console","log","parseWordDocxFile","inputElement","files","length","file","time","reader","FileReader","onloadend","event","arrayBuffer","result","convertToHtml","then","resultObject","rendered","value","timeEnd","extractRawText","convertToMarkdown","readAsArrayBuffer","e","target","__html"],"mappings":"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","sourcesContent":["import \"./styles.css\";\r\nimport mammoth from \"mammoth\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function App() {\r\n  const [renderedDoc, setRenderedDoc] = useState();\r\n\r\n  const h1 = new RegExp(\"<(S*?)[^>]*>.*?</\\\\1>|<.*?/>\");\r\n\r\n  function getFirstChild(string) {\r\n    let output = h1.exec(string);\r\n    // console.log(\"getFirstChild\", string);\r\n    console.log(\"getFirstChild\", output);\r\n  }\r\n\r\n  function parseWordDocxFile(inputElement) {\r\n    var files = inputElement.files || [];\r\n    if (!files.length) return;\r\n    var file = files[0]; // solo el 1er archivo\r\n\r\n    console.time();\r\n    var reader = new FileReader();\r\n    reader.onloadend = function (event) {\r\n      var arrayBuffer = reader.result;\r\n      mammoth\r\n        .convertToHtml({ arrayBuffer: arrayBuffer })\r\n        .then(function (resultObject) {\r\n          let rendered = resultObject.value;\r\n          console.log(rendered);\r\n          setRenderedDoc(rendered);\r\n          getFirstChild(rendered);\r\n        });\r\n      console.timeEnd();\r\n\r\n      mammoth\r\n        .extractRawText({ arrayBuffer: arrayBuffer })\r\n        .then(function (resultObject) {\r\n          // result2.innerHTML = resultObject.value\r\n          // console.log(resultObject.value);\r\n        });\r\n\r\n      mammoth\r\n        .convertToMarkdown({ arrayBuffer: arrayBuffer })\r\n        .then(function (resultObject) {\r\n          // result3.innerHTML = resultObject.value\r\n          // console.log(resultObject.value);\r\n        });\r\n    };\r\n    reader.readAsArrayBuffer(file);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"header\">\r\n        <h1>DOCX to HTML</h1>\r\n        <h2>Selecciona un archivo...</h2>\r\n        <input type=\"file\" onChange={(e) => parseWordDocxFile(e.target)} />\r\n        {/* <button onClick={parseWordDocxFile(deafultFile)}> Recargar </button> */}\r\n      </div>\r\n      {renderedDoc ? (\r\n        <div className=\"rendered-doc\">\r\n          <div className=\"tools\">\r\n            <button className=\"\">üñä</button>\r\n            <button className=\"\">üèÅ</button>\r\n            <button className=\"\">üìë</button>\r\n          </div>\r\n          <div dangerouslySetInnerHTML={{ __html: renderedDoc }} />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}