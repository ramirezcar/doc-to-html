{"ast":null,"code":"\"use strict\";\n\nfunction arrayMove(src, srcIndex, dst, dstIndex, len) {\n  for (var j = 0; j < len; ++j) {\n    dst[j + dstIndex] = src[j + srcIndex];\n    src[j + srcIndex] = void 0;\n  }\n}\n\nfunction Queue(capacity) {\n  this._capacity = capacity;\n  this._length = 0;\n  this._front = 0;\n}\n\nQueue.prototype._willBeOverCapacity = function (size) {\n  return this._capacity < size;\n};\n\nQueue.prototype._pushOne = function (arg) {\n  var length = this.length();\n\n  this._checkCapacity(length + 1);\n\n  var i = this._front + length & this._capacity - 1;\n  this[i] = arg;\n  this._length = length + 1;\n};\n\nQueue.prototype.push = function (fn, receiver, arg) {\n  var length = this.length() + 3;\n\n  if (this._willBeOverCapacity(length)) {\n    this._pushOne(fn);\n\n    this._pushOne(receiver);\n\n    this._pushOne(arg);\n\n    return;\n  }\n\n  var j = this._front + length - 3;\n\n  this._checkCapacity(length);\n\n  var wrapMask = this._capacity - 1;\n  this[j + 0 & wrapMask] = fn;\n  this[j + 1 & wrapMask] = receiver;\n  this[j + 2 & wrapMask] = arg;\n  this._length = length;\n};\n\nQueue.prototype.shift = function () {\n  var front = this._front,\n      ret = this[front];\n  this[front] = undefined;\n  this._front = front + 1 & this._capacity - 1;\n  this._length--;\n  return ret;\n};\n\nQueue.prototype.length = function () {\n  return this._length;\n};\n\nQueue.prototype._checkCapacity = function (size) {\n  if (this._capacity < size) {\n    this._resizeTo(this._capacity << 1);\n  }\n};\n\nQueue.prototype._resizeTo = function (capacity) {\n  var oldCapacity = this._capacity;\n  this._capacity = capacity;\n  var front = this._front;\n  var length = this._length;\n  var moveItemsCount = front + length & oldCapacity - 1;\n  arrayMove(this, 0, this, oldCapacity, moveItemsCount);\n};\n\nmodule.exports = Queue;","map":{"version":3,"sources":["C:/Users/Carlos/Desktop/Coding/doc-to-html/node_modules/bluebird/js/release/queue.js"],"names":["arrayMove","src","srcIndex","dst","dstIndex","len","j","Queue","capacity","_capacity","_length","_front","prototype","_willBeOverCapacity","size","_pushOne","arg","length","_checkCapacity","i","push","fn","receiver","wrapMask","shift","front","ret","undefined","_resizeTo","oldCapacity","moveItemsCount","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\nfunction arrayMove(src, srcIndex, dst, dstIndex, len) {\n    for (var j = 0; j < len; ++j) {\n        dst[j + dstIndex] = src[j + srcIndex];\n        src[j + srcIndex] = void 0;\n    }\n}\n\nfunction Queue(capacity) {\n    this._capacity = capacity;\n    this._length = 0;\n    this._front = 0;\n}\n\nQueue.prototype._willBeOverCapacity = function (size) {\n    return this._capacity < size;\n};\n\nQueue.prototype._pushOne = function (arg) {\n    var length = this.length();\n    this._checkCapacity(length + 1);\n    var i = (this._front + length) & (this._capacity - 1);\n    this[i] = arg;\n    this._length = length + 1;\n};\n\nQueue.prototype.push = function (fn, receiver, arg) {\n    var length = this.length() + 3;\n    if (this._willBeOverCapacity(length)) {\n        this._pushOne(fn);\n        this._pushOne(receiver);\n        this._pushOne(arg);\n        return;\n    }\n    var j = this._front + length - 3;\n    this._checkCapacity(length);\n    var wrapMask = this._capacity - 1;\n    this[(j + 0) & wrapMask] = fn;\n    this[(j + 1) & wrapMask] = receiver;\n    this[(j + 2) & wrapMask] = arg;\n    this._length = length;\n};\n\nQueue.prototype.shift = function () {\n    var front = this._front,\n        ret = this[front];\n\n    this[front] = undefined;\n    this._front = (front + 1) & (this._capacity - 1);\n    this._length--;\n    return ret;\n};\n\nQueue.prototype.length = function () {\n    return this._length;\n};\n\nQueue.prototype._checkCapacity = function (size) {\n    if (this._capacity < size) {\n        this._resizeTo(this._capacity << 1);\n    }\n};\n\nQueue.prototype._resizeTo = function (capacity) {\n    var oldCapacity = this._capacity;\n    this._capacity = capacity;\n    var front = this._front;\n    var length = this._length;\n    var moveItemsCount = (front + length) & (oldCapacity - 1);\n    arrayMove(this, 0, this, oldCapacity, moveItemsCount);\n};\n\nmodule.exports = Queue;\n"]},"metadata":{},"sourceType":"script"}