{"ast":null,"code":"exports.uriToZipEntryName = uriToZipEntryName;\nexports.replaceFragment = replaceFragment;\n\nfunction uriToZipEntryName(base, uri) {\n  if (uri.charAt(0) === \"/\") {\n    return uri.substr(1);\n  } else {\n    // In general, we should check first and second for trailing and leading slashes,\n    // but in our specific case this seems to be sufficient\n    return base + \"/\" + uri;\n  }\n}\n\nfunction replaceFragment(uri, fragment) {\n  var hashIndex = uri.indexOf(\"#\");\n\n  if (hashIndex !== -1) {\n    uri = uri.substring(0, hashIndex);\n  }\n\n  return uri + \"#\" + fragment;\n}","map":{"version":3,"sources":["C:/Users/Carlos/Desktop/Coding/doc-to-html/node_modules/mammoth/lib/docx/uris.js"],"names":["exports","uriToZipEntryName","replaceFragment","base","uri","charAt","substr","fragment","hashIndex","indexOf","substring"],"mappings":"AAAAA,OAAO,CAACC,iBAAR,GAA4BA,iBAA5B;AACAD,OAAO,CAACE,eAAR,GAA0BA,eAA1B;;AAEA,SAASD,iBAAT,CAA2BE,IAA3B,EAAiCC,GAAjC,EAAsC;AAClC,MAAIA,GAAG,CAACC,MAAJ,CAAW,CAAX,MAAkB,GAAtB,EAA2B;AACvB,WAAOD,GAAG,CAACE,MAAJ,CAAW,CAAX,CAAP;AACH,GAFD,MAEO;AACH;AACA;AACA,WAAOH,IAAI,GAAG,GAAP,GAAaC,GAApB;AACH;AACJ;;AAGD,SAASF,eAAT,CAAyBE,GAAzB,EAA8BG,QAA9B,EAAwC;AACpC,MAAIC,SAAS,GAAGJ,GAAG,CAACK,OAAJ,CAAY,GAAZ,CAAhB;;AACA,MAAID,SAAS,KAAK,CAAC,CAAnB,EAAsB;AAClBJ,IAAAA,GAAG,GAAGA,GAAG,CAACM,SAAJ,CAAc,CAAd,EAAiBF,SAAjB,CAAN;AACH;;AACD,SAAOJ,GAAG,GAAG,GAAN,GAAYG,QAAnB;AACH","sourcesContent":["exports.uriToZipEntryName = uriToZipEntryName;\nexports.replaceFragment = replaceFragment;\n\nfunction uriToZipEntryName(base, uri) {\n    if (uri.charAt(0) === \"/\") {\n        return uri.substr(1);\n    } else {\n        // In general, we should check first and second for trailing and leading slashes,\n        // but in our specific case this seems to be sufficient\n        return base + \"/\" + uri;\n    }\n}\n\n\nfunction replaceFragment(uri, fragment) {\n    var hashIndex = uri.indexOf(\"#\");\n    if (hashIndex !== -1) {\n        uri = uri.substring(0, hashIndex);\n    }\n    return uri + \"#\" + fragment;\n}\n"]},"metadata":{},"sourceType":"script"}