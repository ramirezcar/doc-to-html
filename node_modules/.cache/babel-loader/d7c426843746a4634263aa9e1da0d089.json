{"ast":null,"code":"\"use strict\";\n\nvar util = require(\"./util\");\n\nvar maybeWrapAsError = util.maybeWrapAsError;\n\nvar errors = require(\"./errors\");\n\nvar OperationalError = errors.OperationalError;\n\nvar es5 = require(\"./es5\");\n\nfunction isUntypedError(obj) {\n  return obj instanceof Error && es5.getPrototypeOf(obj) === Error.prototype;\n}\n\nvar rErrorKey = /^(?:name|message|stack|cause)$/;\n\nfunction wrapAsOperationalError(obj) {\n  var ret;\n\n  if (isUntypedError(obj)) {\n    ret = new OperationalError(obj);\n    ret.name = obj.name;\n    ret.message = obj.message;\n    ret.stack = obj.stack;\n    var keys = es5.keys(obj);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!rErrorKey.test(key)) {\n        ret[key] = obj[key];\n      }\n    }\n\n    return ret;\n  }\n\n  util.markAsOriginatingFromRejection(obj);\n  return obj;\n}\n\nfunction nodebackForPromise(promise, multiArgs) {\n  return function (err, value) {\n    if (promise === null) return;\n\n    if (err) {\n      var wrapped = wrapAsOperationalError(maybeWrapAsError(err));\n\n      promise._attachExtraTrace(wrapped);\n\n      promise._reject(wrapped);\n    } else if (!multiArgs) {\n      promise._fulfill(value);\n    } else {\n      var $_len = arguments.length;\n      var args = new Array(Math.max($_len - 1, 0));\n\n      for (var $_i = 1; $_i < $_len; ++$_i) {\n        args[$_i - 1] = arguments[$_i];\n      }\n\n      ;\n\n      promise._fulfill(args);\n    }\n\n    promise = null;\n  };\n}\n\nmodule.exports = nodebackForPromise;","map":{"version":3,"sources":["C:/Users/Carlos/Desktop/Coding/doc-to-html/node_modules/bluebird/js/release/nodeback.js"],"names":["util","require","maybeWrapAsError","errors","OperationalError","es5","isUntypedError","obj","Error","getPrototypeOf","prototype","rErrorKey","wrapAsOperationalError","ret","name","message","stack","keys","i","length","key","test","markAsOriginatingFromRejection","nodebackForPromise","promise","multiArgs","err","value","wrapped","_attachExtraTrace","_reject","_fulfill","$_len","arguments","args","Array","Math","max","$_i","module","exports"],"mappings":"AAAA;;AACA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAAlB;;AACA,IAAIC,gBAAgB,GAAGF,IAAI,CAACE,gBAA5B;;AACA,IAAIC,MAAM,GAAGF,OAAO,CAAC,UAAD,CAApB;;AACA,IAAIG,gBAAgB,GAAGD,MAAM,CAACC,gBAA9B;;AACA,IAAIC,GAAG,GAAGJ,OAAO,CAAC,OAAD,CAAjB;;AAEA,SAASK,cAAT,CAAwBC,GAAxB,EAA6B;AACzB,SAAOA,GAAG,YAAYC,KAAf,IACHH,GAAG,CAACI,cAAJ,CAAmBF,GAAnB,MAA4BC,KAAK,CAACE,SADtC;AAEH;;AAED,IAAIC,SAAS,GAAG,gCAAhB;;AACA,SAASC,sBAAT,CAAgCL,GAAhC,EAAqC;AACjC,MAAIM,GAAJ;;AACA,MAAIP,cAAc,CAACC,GAAD,CAAlB,EAAyB;AACrBM,IAAAA,GAAG,GAAG,IAAIT,gBAAJ,CAAqBG,GAArB,CAAN;AACAM,IAAAA,GAAG,CAACC,IAAJ,GAAWP,GAAG,CAACO,IAAf;AACAD,IAAAA,GAAG,CAACE,OAAJ,GAAcR,GAAG,CAACQ,OAAlB;AACAF,IAAAA,GAAG,CAACG,KAAJ,GAAYT,GAAG,CAACS,KAAhB;AACA,QAAIC,IAAI,GAAGZ,GAAG,CAACY,IAAJ,CAASV,GAAT,CAAX;;AACA,SAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACE,MAAzB,EAAiC,EAAED,CAAnC,EAAsC;AAClC,UAAIE,GAAG,GAAGH,IAAI,CAACC,CAAD,CAAd;;AACA,UAAI,CAACP,SAAS,CAACU,IAAV,CAAeD,GAAf,CAAL,EAA0B;AACtBP,QAAAA,GAAG,CAACO,GAAD,CAAH,GAAWb,GAAG,CAACa,GAAD,CAAd;AACH;AACJ;;AACD,WAAOP,GAAP;AACH;;AACDb,EAAAA,IAAI,CAACsB,8BAAL,CAAoCf,GAApC;AACA,SAAOA,GAAP;AACH;;AAED,SAASgB,kBAAT,CAA4BC,OAA5B,EAAqCC,SAArC,EAAgD;AAC5C,SAAO,UAASC,GAAT,EAAcC,KAAd,EAAqB;AACxB,QAAIH,OAAO,KAAK,IAAhB,EAAsB;;AACtB,QAAIE,GAAJ,EAAS;AACL,UAAIE,OAAO,GAAGhB,sBAAsB,CAACV,gBAAgB,CAACwB,GAAD,CAAjB,CAApC;;AACAF,MAAAA,OAAO,CAACK,iBAAR,CAA0BD,OAA1B;;AACAJ,MAAAA,OAAO,CAACM,OAAR,CAAgBF,OAAhB;AACH,KAJD,MAIO,IAAI,CAACH,SAAL,EAAgB;AACnBD,MAAAA,OAAO,CAACO,QAAR,CAAiBJ,KAAjB;AACH,KAFM,MAEA;AACH,UAAIK,KAAK,GAAGC,SAAS,CAACd,MAAtB;AAA6B,UAAIe,IAAI,GAAG,IAAIC,KAAJ,CAAUC,IAAI,CAACC,GAAL,CAASL,KAAK,GAAG,CAAjB,EAAoB,CAApB,CAAV,CAAX;;AAA8C,WAAI,IAAIM,GAAG,GAAG,CAAd,EAAiBA,GAAG,GAAGN,KAAvB,EAA8B,EAAEM,GAAhC,EAAqC;AAACJ,QAAAA,IAAI,CAACI,GAAG,GAAG,CAAP,CAAJ,GAAgBL,SAAS,CAACK,GAAD,CAAzB;AAAgC;;AAAA;;AACjJd,MAAAA,OAAO,CAACO,QAAR,CAAiBG,IAAjB;AACH;;AACDV,IAAAA,OAAO,GAAG,IAAV;AACH,GAbD;AAcH;;AAEDe,MAAM,CAACC,OAAP,GAAiBjB,kBAAjB","sourcesContent":["\"use strict\";\nvar util = require(\"./util\");\nvar maybeWrapAsError = util.maybeWrapAsError;\nvar errors = require(\"./errors\");\nvar OperationalError = errors.OperationalError;\nvar es5 = require(\"./es5\");\n\nfunction isUntypedError(obj) {\n    return obj instanceof Error &&\n        es5.getPrototypeOf(obj) === Error.prototype;\n}\n\nvar rErrorKey = /^(?:name|message|stack|cause)$/;\nfunction wrapAsOperationalError(obj) {\n    var ret;\n    if (isUntypedError(obj)) {\n        ret = new OperationalError(obj);\n        ret.name = obj.name;\n        ret.message = obj.message;\n        ret.stack = obj.stack;\n        var keys = es5.keys(obj);\n        for (var i = 0; i < keys.length; ++i) {\n            var key = keys[i];\n            if (!rErrorKey.test(key)) {\n                ret[key] = obj[key];\n            }\n        }\n        return ret;\n    }\n    util.markAsOriginatingFromRejection(obj);\n    return obj;\n}\n\nfunction nodebackForPromise(promise, multiArgs) {\n    return function(err, value) {\n        if (promise === null) return;\n        if (err) {\n            var wrapped = wrapAsOperationalError(maybeWrapAsError(err));\n            promise._attachExtraTrace(wrapped);\n            promise._reject(wrapped);\n        } else if (!multiArgs) {\n            promise._fulfill(value);\n        } else {\n            var $_len = arguments.length;var args = new Array(Math.max($_len - 1, 0)); for(var $_i = 1; $_i < $_len; ++$_i) {args[$_i - 1] = arguments[$_i];};\n            promise._fulfill(args);\n        }\n        promise = null;\n    };\n}\n\nmodule.exports = nodebackForPromise;\n"]},"metadata":{},"sourceType":"script"}