{"ast":null,"code":"var _ = require(\"underscore\");\n\nvar lop = require(\"lop\");\n\nvar documentMatchers = require(\"./styles/document-matchers\");\n\nvar htmlPaths = require(\"./styles/html-paths\");\n\nvar tokenise = require(\"./styles/parser/tokeniser\").tokenise;\n\nvar results = require(\"./results\");\n\nexports.readHtmlPath = readHtmlPath;\nexports.readDocumentMatcher = readDocumentMatcher;\nexports.readStyle = readStyle;\n\nfunction readStyle(string) {\n  return parseString(styleRule, string);\n}\n\nfunction createStyleRule() {\n  return lop.rules.sequence(lop.rules.sequence.capture(documentMatcherRule()), lop.rules.tokenOfType(\"whitespace\"), lop.rules.tokenOfType(\"arrow\"), lop.rules.sequence.capture(lop.rules.optional(lop.rules.sequence(lop.rules.tokenOfType(\"whitespace\"), lop.rules.sequence.capture(htmlPathRule())).head())), lop.rules.tokenOfType(\"end\")).map(function (documentMatcher, htmlPath) {\n    return {\n      from: documentMatcher,\n      to: htmlPath.valueOrElse(htmlPaths.empty)\n    };\n  });\n}\n\nfunction readDocumentMatcher(string) {\n  return parseString(documentMatcherRule(), string);\n}\n\nfunction documentMatcherRule() {\n  var sequence = lop.rules.sequence;\n\n  var identifierToConstant = function identifierToConstant(identifier, constant) {\n    return lop.rules.then(lop.rules.token(\"identifier\", identifier), function () {\n      return constant;\n    });\n  };\n\n  var paragraphRule = identifierToConstant(\"p\", documentMatchers.paragraph);\n  var runRule = identifierToConstant(\"r\", documentMatchers.run);\n  var elementTypeRule = lop.rules.firstOf(\"p or r or table\", paragraphRule, runRule);\n  var styleIdRule = lop.rules.then(classRule, function (styleId) {\n    return {\n      styleId: styleId\n    };\n  });\n  var styleNameMatcherRule = lop.rules.firstOf(\"style name matcher\", lop.rules.then(lop.rules.sequence(lop.rules.tokenOfType(\"equals\"), lop.rules.sequence.cut(), lop.rules.sequence.capture(stringRule)).head(), function (styleName) {\n    return {\n      styleName: documentMatchers.equalTo(styleName)\n    };\n  }), lop.rules.then(lop.rules.sequence(lop.rules.tokenOfType(\"startsWith\"), lop.rules.sequence.cut(), lop.rules.sequence.capture(stringRule)).head(), function (styleName) {\n    return {\n      styleName: documentMatchers.startsWith(styleName)\n    };\n  }));\n  var styleNameRule = lop.rules.sequence(lop.rules.tokenOfType(\"open-square-bracket\"), lop.rules.sequence.cut(), lop.rules.token(\"identifier\", \"style-name\"), lop.rules.sequence.capture(styleNameMatcherRule), lop.rules.tokenOfType(\"close-square-bracket\")).head();\n  var listTypeRule = lop.rules.firstOf(\"list type\", identifierToConstant(\"ordered-list\", {\n    isOrdered: true\n  }), identifierToConstant(\"unordered-list\", {\n    isOrdered: false\n  }));\n  var listRule = sequence(lop.rules.tokenOfType(\"colon\"), sequence.capture(listTypeRule), sequence.cut(), lop.rules.tokenOfType(\"open-paren\"), sequence.capture(integerRule), lop.rules.tokenOfType(\"close-paren\")).map(function (listType, levelNumber) {\n    return {\n      list: {\n        isOrdered: listType.isOrdered,\n        levelIndex: levelNumber - 1\n      }\n    };\n  });\n\n  function createMatcherSuffixesRule(rules) {\n    var matcherSuffix = lop.rules.firstOf.apply(lop.rules.firstOf, [\"matcher suffix\"].concat(rules));\n    var matcherSuffixes = lop.rules.zeroOrMore(matcherSuffix);\n    return lop.rules.then(matcherSuffixes, function (suffixes) {\n      var matcherOptions = {};\n      suffixes.forEach(function (suffix) {\n        _.extend(matcherOptions, suffix);\n      });\n      return matcherOptions;\n    });\n  }\n\n  var paragraphOrRun = sequence(sequence.capture(elementTypeRule), sequence.capture(createMatcherSuffixesRule([styleIdRule, styleNameRule, listRule]))).map(function (createMatcher, matcherOptions) {\n    return createMatcher(matcherOptions);\n  });\n  var table = sequence(lop.rules.token(\"identifier\", \"table\"), sequence.capture(createMatcherSuffixesRule([styleIdRule, styleNameRule]))).map(function (options) {\n    return documentMatchers.table(options);\n  });\n  var bold = identifierToConstant(\"b\", documentMatchers.bold);\n  var italic = identifierToConstant(\"i\", documentMatchers.italic);\n  var underline = identifierToConstant(\"u\", documentMatchers.underline);\n  var strikethrough = identifierToConstant(\"strike\", documentMatchers.strikethrough);\n  var allCaps = identifierToConstant(\"all-caps\", documentMatchers.allCaps);\n  var smallCaps = identifierToConstant(\"small-caps\", documentMatchers.smallCaps);\n  var commentReference = identifierToConstant(\"comment-reference\", documentMatchers.commentReference);\n  var breakMatcher = sequence(lop.rules.token(\"identifier\", \"br\"), sequence.cut(), lop.rules.tokenOfType(\"open-square-bracket\"), lop.rules.token(\"identifier\", \"type\"), lop.rules.tokenOfType(\"equals\"), sequence.capture(stringRule), lop.rules.tokenOfType(\"close-square-bracket\")).map(function (breakType) {\n    switch (breakType) {\n      case \"line\":\n        return documentMatchers.lineBreak;\n\n      case \"page\":\n        return documentMatchers.pageBreak;\n\n      case \"column\":\n        return documentMatchers.columnBreak;\n\n      default: // TODO: handle unknown document matchers\n\n    }\n  });\n  return lop.rules.firstOf(\"element type\", paragraphOrRun, table, bold, italic, underline, strikethrough, allCaps, smallCaps, commentReference, breakMatcher);\n}\n\nfunction readHtmlPath(string) {\n  return parseString(htmlPathRule(), string);\n}\n\nfunction htmlPathRule() {\n  var capture = lop.rules.sequence.capture;\n  var whitespaceRule = lop.rules.tokenOfType(\"whitespace\");\n  var freshRule = lop.rules.then(lop.rules.optional(lop.rules.sequence(lop.rules.tokenOfType(\"colon\"), lop.rules.token(\"identifier\", \"fresh\"))), function (option) {\n    return option.map(function () {\n      return true;\n    }).valueOrElse(false);\n  });\n  var separatorRule = lop.rules.then(lop.rules.optional(lop.rules.sequence(lop.rules.tokenOfType(\"colon\"), lop.rules.token(\"identifier\", \"separator\"), lop.rules.tokenOfType(\"open-paren\"), capture(stringRule), lop.rules.tokenOfType(\"close-paren\")).head()), function (option) {\n    return option.valueOrElse(\"\");\n  });\n  var tagNamesRule = lop.rules.oneOrMoreWithSeparator(identifierRule, lop.rules.tokenOfType(\"choice\"));\n  var styleElementRule = lop.rules.sequence(capture(tagNamesRule), capture(lop.rules.zeroOrMore(classRule)), capture(freshRule), capture(separatorRule)).map(function (tagName, classNames, fresh, separator) {\n    var attributes = {};\n    var options = {};\n\n    if (classNames.length > 0) {\n      attributes[\"class\"] = classNames.join(\" \");\n    }\n\n    if (fresh) {\n      options.fresh = true;\n    }\n\n    if (separator) {\n      options.separator = separator;\n    }\n\n    return htmlPaths.element(tagName, attributes, options);\n  });\n  return lop.rules.firstOf(\"html path\", lop.rules.then(lop.rules.tokenOfType(\"bang\"), function () {\n    return htmlPaths.ignore;\n  }), lop.rules.then(lop.rules.zeroOrMoreWithSeparator(styleElementRule, lop.rules.sequence(whitespaceRule, lop.rules.tokenOfType(\"gt\"), whitespaceRule)), htmlPaths.elements));\n}\n\nvar identifierRule = lop.rules.then(lop.rules.tokenOfType(\"identifier\"), decodeEscapeSequences);\nvar integerRule = lop.rules.tokenOfType(\"integer\");\nvar stringRule = lop.rules.then(lop.rules.tokenOfType(\"string\"), decodeEscapeSequences);\nvar escapeSequences = {\n  \"n\": \"\\n\",\n  \"r\": \"\\r\",\n  \"t\": \"\\t\"\n};\n\nfunction decodeEscapeSequences(value) {\n  return value.replace(/\\\\(.)/g, function (match, code) {\n    return escapeSequences[code] || code;\n  });\n}\n\nvar classRule = lop.rules.sequence(lop.rules.tokenOfType(\"dot\"), lop.rules.sequence.cut(), lop.rules.sequence.capture(identifierRule)).head();\n\nfunction parseString(rule, string) {\n  var tokens = tokenise(string);\n  var parser = lop.Parser();\n  var parseResult = parser.parseTokens(rule, tokens);\n\n  if (parseResult.isSuccess()) {\n    return results.success(parseResult.value());\n  } else {\n    return new results.Result(null, [results.warning(describeFailure(string, parseResult))]);\n  }\n}\n\nfunction describeFailure(input, parseResult) {\n  return \"Did not understand this style mapping, so ignored it: \" + input + \"\\n\" + parseResult.errors().map(describeError).join(\"\\n\");\n}\n\nfunction describeError(error) {\n  return \"Error was at character number \" + error.characterNumber() + \": \" + \"Expected \" + error.expected + \" but got \" + error.actual;\n}\n\nvar styleRule = createStyleRule();","map":{"version":3,"sources":["C:/Users/Carlos/Desktop/Coding/doc-to-html/node_modules/mammoth/lib/style-reader.js"],"names":["_","require","lop","documentMatchers","htmlPaths","tokenise","results","exports","readHtmlPath","readDocumentMatcher","readStyle","string","parseString","styleRule","createStyleRule","rules","sequence","capture","documentMatcherRule","tokenOfType","optional","htmlPathRule","head","map","documentMatcher","htmlPath","from","to","valueOrElse","empty","identifierToConstant","identifier","constant","then","token","paragraphRule","paragraph","runRule","run","elementTypeRule","firstOf","styleIdRule","classRule","styleId","styleNameMatcherRule","cut","stringRule","styleName","equalTo","startsWith","styleNameRule","listTypeRule","isOrdered","listRule","integerRule","listType","levelNumber","list","levelIndex","createMatcherSuffixesRule","matcherSuffix","apply","concat","matcherSuffixes","zeroOrMore","suffixes","matcherOptions","forEach","suffix","extend","paragraphOrRun","createMatcher","table","options","bold","italic","underline","strikethrough","allCaps","smallCaps","commentReference","breakMatcher","breakType","lineBreak","pageBreak","columnBreak","whitespaceRule","freshRule","option","separatorRule","tagNamesRule","oneOrMoreWithSeparator","identifierRule","styleElementRule","tagName","classNames","fresh","separator","attributes","length","join","element","ignore","zeroOrMoreWithSeparator","elements","decodeEscapeSequences","escapeSequences","value","replace","match","code","rule","tokens","parser","Parser","parseResult","parseTokens","isSuccess","success","Result","warning","describeFailure","input","errors","describeError","error","characterNumber","expected","actual"],"mappings":"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","sourcesContent":["var _ = require(\"underscore\");\nvar lop = require(\"lop\");\n\nvar documentMatchers = require(\"./styles/document-matchers\");\nvar htmlPaths = require(\"./styles/html-paths\");\nvar tokenise = require(\"./styles/parser/tokeniser\").tokenise;\nvar results = require(\"./results\");\n\nexports.readHtmlPath = readHtmlPath;\nexports.readDocumentMatcher = readDocumentMatcher;\nexports.readStyle = readStyle;\n\n\nfunction readStyle(string) {\n    return parseString(styleRule, string);\n}\n\nfunction createStyleRule() {\n    return lop.rules.sequence(\n        lop.rules.sequence.capture(documentMatcherRule()),\n        lop.rules.tokenOfType(\"whitespace\"),\n        lop.rules.tokenOfType(\"arrow\"),\n        lop.rules.sequence.capture(lop.rules.optional(lop.rules.sequence(\n            lop.rules.tokenOfType(\"whitespace\"),\n            lop.rules.sequence.capture(htmlPathRule())\n        ).head())),\n        lop.rules.tokenOfType(\"end\")\n    ).map(function(documentMatcher, htmlPath) {\n        return {\n            from: documentMatcher,\n            to: htmlPath.valueOrElse(htmlPaths.empty)\n        };\n    });\n}\n\nfunction readDocumentMatcher(string) {\n    return parseString(documentMatcherRule(), string);\n}\n\nfunction documentMatcherRule() {\n    var sequence = lop.rules.sequence;\n\n    var identifierToConstant = function(identifier, constant) {\n        return lop.rules.then(\n            lop.rules.token(\"identifier\", identifier),\n            function() {\n                return constant;\n            }\n        );\n    };\n\n    var paragraphRule = identifierToConstant(\"p\", documentMatchers.paragraph);\n    var runRule = identifierToConstant(\"r\", documentMatchers.run);\n\n    var elementTypeRule = lop.rules.firstOf(\"p or r or table\",\n        paragraphRule,\n        runRule\n    );\n\n    var styleIdRule = lop.rules.then(\n        classRule,\n        function(styleId) {\n            return {styleId: styleId};\n        }\n    );\n\n    var styleNameMatcherRule = lop.rules.firstOf(\"style name matcher\",\n        lop.rules.then(\n            lop.rules.sequence(\n                lop.rules.tokenOfType(\"equals\"),\n                lop.rules.sequence.cut(),\n                lop.rules.sequence.capture(stringRule)\n            ).head(),\n            function(styleName) {\n                return {styleName: documentMatchers.equalTo(styleName)};\n            }\n        ),\n        lop.rules.then(\n            lop.rules.sequence(\n                lop.rules.tokenOfType(\"startsWith\"),\n                lop.rules.sequence.cut(),\n                lop.rules.sequence.capture(stringRule)\n            ).head(),\n            function(styleName) {\n                return {styleName: documentMatchers.startsWith(styleName)};\n            }\n        )\n    );\n\n    var styleNameRule = lop.rules.sequence(\n        lop.rules.tokenOfType(\"open-square-bracket\"),\n        lop.rules.sequence.cut(),\n        lop.rules.token(\"identifier\", \"style-name\"),\n        lop.rules.sequence.capture(styleNameMatcherRule),\n        lop.rules.tokenOfType(\"close-square-bracket\")\n    ).head();\n\n\n    var listTypeRule = lop.rules.firstOf(\"list type\",\n        identifierToConstant(\"ordered-list\", {isOrdered: true}),\n        identifierToConstant(\"unordered-list\", {isOrdered: false})\n    );\n    var listRule = sequence(\n        lop.rules.tokenOfType(\"colon\"),\n        sequence.capture(listTypeRule),\n        sequence.cut(),\n        lop.rules.tokenOfType(\"open-paren\"),\n        sequence.capture(integerRule),\n        lop.rules.tokenOfType(\"close-paren\")\n    ).map(function(listType, levelNumber) {\n        return {\n            list: {\n                isOrdered: listType.isOrdered,\n                levelIndex: levelNumber - 1\n            }\n        };\n    });\n\n    function createMatcherSuffixesRule(rules) {\n        var matcherSuffix = lop.rules.firstOf.apply(\n            lop.rules.firstOf,\n            [\"matcher suffix\"].concat(rules)\n        );\n        var matcherSuffixes = lop.rules.zeroOrMore(matcherSuffix);\n        return lop.rules.then(matcherSuffixes, function(suffixes) {\n            var matcherOptions = {};\n            suffixes.forEach(function(suffix) {\n                _.extend(matcherOptions, suffix);\n            });\n            return matcherOptions;\n        });\n    }\n\n    var paragraphOrRun = sequence(\n        sequence.capture(elementTypeRule),\n        sequence.capture(createMatcherSuffixesRule([\n            styleIdRule,\n            styleNameRule,\n            listRule\n        ]))\n    ).map(function(createMatcher, matcherOptions) {\n        return createMatcher(matcherOptions);\n    });\n\n    var table = sequence(\n        lop.rules.token(\"identifier\", \"table\"),\n        sequence.capture(createMatcherSuffixesRule([\n            styleIdRule,\n            styleNameRule\n        ]))\n    ).map(function(options) {\n        return documentMatchers.table(options);\n    });\n\n    var bold = identifierToConstant(\"b\", documentMatchers.bold);\n    var italic = identifierToConstant(\"i\", documentMatchers.italic);\n    var underline = identifierToConstant(\"u\", documentMatchers.underline);\n    var strikethrough = identifierToConstant(\"strike\", documentMatchers.strikethrough);\n    var allCaps = identifierToConstant(\"all-caps\", documentMatchers.allCaps);\n    var smallCaps = identifierToConstant(\"small-caps\", documentMatchers.smallCaps);\n    var commentReference = identifierToConstant(\"comment-reference\", documentMatchers.commentReference);\n\n    var breakMatcher = sequence(\n        lop.rules.token(\"identifier\", \"br\"),\n        sequence.cut(),\n        lop.rules.tokenOfType(\"open-square-bracket\"),\n        lop.rules.token(\"identifier\", \"type\"),\n        lop.rules.tokenOfType(\"equals\"),\n        sequence.capture(stringRule),\n        lop.rules.tokenOfType(\"close-square-bracket\")\n    ).map(function(breakType) {\n        switch (breakType) {\n        case \"line\":\n            return documentMatchers.lineBreak;\n        case \"page\":\n            return documentMatchers.pageBreak;\n        case \"column\":\n            return documentMatchers.columnBreak;\n        default:\n            // TODO: handle unknown document matchers\n        }\n    });\n\n    return lop.rules.firstOf(\"element type\",\n        paragraphOrRun,\n        table,\n        bold,\n        italic,\n        underline,\n        strikethrough,\n        allCaps,\n        smallCaps,\n        commentReference,\n        breakMatcher\n    );\n}\n\nfunction readHtmlPath(string) {\n    return parseString(htmlPathRule(), string);\n}\n\nfunction htmlPathRule() {\n    var capture = lop.rules.sequence.capture;\n    var whitespaceRule = lop.rules.tokenOfType(\"whitespace\");\n    var freshRule = lop.rules.then(\n        lop.rules.optional(lop.rules.sequence(\n            lop.rules.tokenOfType(\"colon\"),\n            lop.rules.token(\"identifier\", \"fresh\")\n        )),\n        function(option) {\n            return option.map(function() {\n                return true;\n            }).valueOrElse(false);\n        }\n    );\n\n    var separatorRule = lop.rules.then(\n        lop.rules.optional(lop.rules.sequence(\n            lop.rules.tokenOfType(\"colon\"),\n            lop.rules.token(\"identifier\", \"separator\"),\n            lop.rules.tokenOfType(\"open-paren\"),\n            capture(stringRule),\n            lop.rules.tokenOfType(\"close-paren\")\n        ).head()),\n        function(option) {\n            return option.valueOrElse(\"\");\n        }\n    );\n\n    var tagNamesRule = lop.rules.oneOrMoreWithSeparator(\n        identifierRule,\n        lop.rules.tokenOfType(\"choice\")\n    );\n\n    var styleElementRule = lop.rules.sequence(\n        capture(tagNamesRule),\n        capture(lop.rules.zeroOrMore(classRule)),\n        capture(freshRule),\n        capture(separatorRule)\n    ).map(function(tagName, classNames, fresh, separator) {\n        var attributes = {};\n        var options = {};\n        if (classNames.length > 0) {\n            attributes[\"class\"] = classNames.join(\" \");\n        }\n        if (fresh) {\n            options.fresh = true;\n        }\n        if (separator) {\n            options.separator = separator;\n        }\n        return htmlPaths.element(tagName, attributes, options);\n    });\n\n    return lop.rules.firstOf(\"html path\",\n        lop.rules.then(lop.rules.tokenOfType(\"bang\"), function() {\n            return htmlPaths.ignore;\n        }),\n        lop.rules.then(\n            lop.rules.zeroOrMoreWithSeparator(\n                styleElementRule,\n                lop.rules.sequence(\n                    whitespaceRule,\n                    lop.rules.tokenOfType(\"gt\"),\n                    whitespaceRule\n                )\n            ),\n            htmlPaths.elements\n        )\n    );\n}\n\nvar identifierRule = lop.rules.then(\n    lop.rules.tokenOfType(\"identifier\"),\n    decodeEscapeSequences\n);\nvar integerRule = lop.rules.tokenOfType(\"integer\");\n\nvar stringRule = lop.rules.then(\n    lop.rules.tokenOfType(\"string\"),\n    decodeEscapeSequences\n);\n\nvar escapeSequences = {\n    \"n\": \"\\n\",\n    \"r\": \"\\r\",\n    \"t\": \"\\t\"\n};\n\nfunction decodeEscapeSequences(value) {\n    return value.replace(/\\\\(.)/g, function(match, code) {\n        return escapeSequences[code] || code;\n    });\n}\n\nvar classRule = lop.rules.sequence(\n    lop.rules.tokenOfType(\"dot\"),\n    lop.rules.sequence.cut(),\n    lop.rules.sequence.capture(identifierRule)\n).head();\n\nfunction parseString(rule, string) {\n    var tokens = tokenise(string);\n    var parser = lop.Parser();\n    var parseResult = parser.parseTokens(rule, tokens);\n    if (parseResult.isSuccess()) {\n        return results.success(parseResult.value());\n    } else {\n        return new results.Result(null, [results.warning(describeFailure(string, parseResult))]);\n    }\n}\n\nfunction describeFailure(input, parseResult) {\n    return \"Did not understand this style mapping, so ignored it: \" + input + \"\\n\" +\n        parseResult.errors().map(describeError).join(\"\\n\");\n}\n\nfunction describeError(error) {\n    return \"Error was at character number \" + error.characterNumber() + \": \" +\n        \"Expected \" + error.expected + \" but got \" + error.actual;\n}\n\nvar styleRule = createStyleRule();\n"]},"metadata":{},"sourceType":"script"}