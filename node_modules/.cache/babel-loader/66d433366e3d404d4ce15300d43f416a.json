{"ast":null,"code":"\"use strict\";\n\nmodule.exports = function (Promise, INTERNAL, tryConvertToPromise, apiRejection, debug) {\n  var util = require(\"./util\");\n\n  var tryCatch = util.tryCatch;\n\n  Promise.method = function (fn) {\n    if (typeof fn !== \"function\") {\n      throw new Promise.TypeError(\"expecting a function but got \" + util.classString(fn));\n    }\n\n    return function () {\n      var ret = new Promise(INTERNAL);\n\n      ret._captureStackTrace();\n\n      ret._pushContext();\n\n      var value = tryCatch(fn).apply(this, arguments);\n\n      var promiseCreated = ret._popContext();\n\n      debug.checkForgottenReturns(value, promiseCreated, \"Promise.method\", ret);\n\n      ret._resolveFromSyncValue(value);\n\n      return ret;\n    };\n  };\n\n  Promise.attempt = Promise[\"try\"] = function (fn) {\n    if (typeof fn !== \"function\") {\n      return apiRejection(\"expecting a function but got \" + util.classString(fn));\n    }\n\n    var ret = new Promise(INTERNAL);\n\n    ret._captureStackTrace();\n\n    ret._pushContext();\n\n    var value;\n\n    if (arguments.length > 1) {\n      debug.deprecated(\"calling Promise.try with more than 1 argument\");\n      var arg = arguments[1];\n      var ctx = arguments[2];\n      value = util.isArray(arg) ? tryCatch(fn).apply(ctx, arg) : tryCatch(fn).call(ctx, arg);\n    } else {\n      value = tryCatch(fn)();\n    }\n\n    var promiseCreated = ret._popContext();\n\n    debug.checkForgottenReturns(value, promiseCreated, \"Promise.try\", ret);\n\n    ret._resolveFromSyncValue(value);\n\n    return ret;\n  };\n\n  Promise.prototype._resolveFromSyncValue = function (value) {\n    if (value === util.errorObj) {\n      this._rejectCallback(value.e, false);\n    } else {\n      this._resolveCallback(value, true);\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/Carlos/Desktop/Coding/doc-to-html/node_modules/bluebird/js/release/method.js"],"names":["module","exports","Promise","INTERNAL","tryConvertToPromise","apiRejection","debug","util","require","tryCatch","method","fn","TypeError","classString","ret","_captureStackTrace","_pushContext","value","apply","arguments","promiseCreated","_popContext","checkForgottenReturns","_resolveFromSyncValue","attempt","length","deprecated","arg","ctx","isArray","call","prototype","errorObj","_rejectCallback","e","_resolveCallback"],"mappings":"AAAA;;AACAA,MAAM,CAACC,OAAP,GACA,UAASC,OAAT,EAAkBC,QAAlB,EAA4BC,mBAA5B,EAAiDC,YAAjD,EAA+DC,KAA/D,EAAsE;AACtE,MAAIC,IAAI,GAAGC,OAAO,CAAC,QAAD,CAAlB;;AACA,MAAIC,QAAQ,GAAGF,IAAI,CAACE,QAApB;;AAEAP,EAAAA,OAAO,CAACQ,MAAR,GAAiB,UAAUC,EAAV,EAAc;AAC3B,QAAI,OAAOA,EAAP,KAAc,UAAlB,EAA8B;AAC1B,YAAM,IAAIT,OAAO,CAACU,SAAZ,CAAsB,kCAAkCL,IAAI,CAACM,WAAL,CAAiBF,EAAjB,CAAxD,CAAN;AACH;;AACD,WAAO,YAAY;AACf,UAAIG,GAAG,GAAG,IAAIZ,OAAJ,CAAYC,QAAZ,CAAV;;AACAW,MAAAA,GAAG,CAACC,kBAAJ;;AACAD,MAAAA,GAAG,CAACE,YAAJ;;AACA,UAAIC,KAAK,GAAGR,QAAQ,CAACE,EAAD,CAAR,CAAaO,KAAb,CAAmB,IAAnB,EAAyBC,SAAzB,CAAZ;;AACA,UAAIC,cAAc,GAAGN,GAAG,CAACO,WAAJ,EAArB;;AACAf,MAAAA,KAAK,CAACgB,qBAAN,CACIL,KADJ,EACWG,cADX,EAC2B,gBAD3B,EAC6CN,GAD7C;;AAEAA,MAAAA,GAAG,CAACS,qBAAJ,CAA0BN,KAA1B;;AACA,aAAOH,GAAP;AACH,KAVD;AAWH,GAfD;;AAiBAZ,EAAAA,OAAO,CAACsB,OAAR,GAAkBtB,OAAO,CAAC,KAAD,CAAP,GAAiB,UAAUS,EAAV,EAAc;AAC7C,QAAI,OAAOA,EAAP,KAAc,UAAlB,EAA8B;AAC1B,aAAON,YAAY,CAAC,kCAAkCE,IAAI,CAACM,WAAL,CAAiBF,EAAjB,CAAnC,CAAnB;AACH;;AACD,QAAIG,GAAG,GAAG,IAAIZ,OAAJ,CAAYC,QAAZ,CAAV;;AACAW,IAAAA,GAAG,CAACC,kBAAJ;;AACAD,IAAAA,GAAG,CAACE,YAAJ;;AACA,QAAIC,KAAJ;;AACA,QAAIE,SAAS,CAACM,MAAV,GAAmB,CAAvB,EAA0B;AACtBnB,MAAAA,KAAK,CAACoB,UAAN,CAAiB,+CAAjB;AACA,UAAIC,GAAG,GAAGR,SAAS,CAAC,CAAD,CAAnB;AACA,UAAIS,GAAG,GAAGT,SAAS,CAAC,CAAD,CAAnB;AACAF,MAAAA,KAAK,GAAGV,IAAI,CAACsB,OAAL,CAAaF,GAAb,IAAoBlB,QAAQ,CAACE,EAAD,CAAR,CAAaO,KAAb,CAAmBU,GAAnB,EAAwBD,GAAxB,CAApB,GACoBlB,QAAQ,CAACE,EAAD,CAAR,CAAamB,IAAb,CAAkBF,GAAlB,EAAuBD,GAAvB,CAD5B;AAEH,KAND,MAMO;AACHV,MAAAA,KAAK,GAAGR,QAAQ,CAACE,EAAD,CAAR,EAAR;AACH;;AACD,QAAIS,cAAc,GAAGN,GAAG,CAACO,WAAJ,EAArB;;AACAf,IAAAA,KAAK,CAACgB,qBAAN,CACIL,KADJ,EACWG,cADX,EAC2B,aAD3B,EAC0CN,GAD1C;;AAEAA,IAAAA,GAAG,CAACS,qBAAJ,CAA0BN,KAA1B;;AACA,WAAOH,GAAP;AACH,GAtBD;;AAwBAZ,EAAAA,OAAO,CAAC6B,SAAR,CAAkBR,qBAAlB,GAA0C,UAAUN,KAAV,EAAiB;AACvD,QAAIA,KAAK,KAAKV,IAAI,CAACyB,QAAnB,EAA6B;AACzB,WAAKC,eAAL,CAAqBhB,KAAK,CAACiB,CAA3B,EAA8B,KAA9B;AACH,KAFD,MAEO;AACH,WAAKC,gBAAL,CAAsBlB,KAAtB,EAA6B,IAA7B;AACH;AACJ,GAND;AAOC,CArDD","sourcesContent":["\"use strict\";\nmodule.exports =\nfunction(Promise, INTERNAL, tryConvertToPromise, apiRejection, debug) {\nvar util = require(\"./util\");\nvar tryCatch = util.tryCatch;\n\nPromise.method = function (fn) {\n    if (typeof fn !== \"function\") {\n        throw new Promise.TypeError(\"expecting a function but got \" + util.classString(fn));\n    }\n    return function () {\n        var ret = new Promise(INTERNAL);\n        ret._captureStackTrace();\n        ret._pushContext();\n        var value = tryCatch(fn).apply(this, arguments);\n        var promiseCreated = ret._popContext();\n        debug.checkForgottenReturns(\n            value, promiseCreated, \"Promise.method\", ret);\n        ret._resolveFromSyncValue(value);\n        return ret;\n    };\n};\n\nPromise.attempt = Promise[\"try\"] = function (fn) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n    }\n    var ret = new Promise(INTERNAL);\n    ret._captureStackTrace();\n    ret._pushContext();\n    var value;\n    if (arguments.length > 1) {\n        debug.deprecated(\"calling Promise.try with more than 1 argument\");\n        var arg = arguments[1];\n        var ctx = arguments[2];\n        value = util.isArray(arg) ? tryCatch(fn).apply(ctx, arg)\n                                  : tryCatch(fn).call(ctx, arg);\n    } else {\n        value = tryCatch(fn)();\n    }\n    var promiseCreated = ret._popContext();\n    debug.checkForgottenReturns(\n        value, promiseCreated, \"Promise.try\", ret);\n    ret._resolveFromSyncValue(value);\n    return ret;\n};\n\nPromise.prototype._resolveFromSyncValue = function (value) {\n    if (value === util.errorObj) {\n        this._rejectCallback(value.e, false);\n    } else {\n        this._resolveCallback(value, true);\n    }\n};\n};\n"]},"metadata":{},"sourceType":"script"}