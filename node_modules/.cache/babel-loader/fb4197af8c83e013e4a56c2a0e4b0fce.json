{"ast":null,"code":"var _ = require(\"underscore\");\n\nexports.paragraph = paragraph;\nexports.run = run;\nexports._elements = elements;\nexports.getDescendantsOfType = getDescendantsOfType;\nexports.getDescendants = getDescendants;\n\nfunction paragraph(transform) {\n  return elementsOfType(\"paragraph\", transform);\n}\n\nfunction run(transform) {\n  return elementsOfType(\"run\", transform);\n}\n\nfunction elementsOfType(elementType, transform) {\n  return elements(function (element) {\n    if (element.type === elementType) {\n      return transform(element);\n    } else {\n      return element;\n    }\n  });\n}\n\nfunction elements(transform) {\n  return function transformElement(element) {\n    if (element.children) {\n      var children = _.map(element.children, transformElement);\n\n      element = _.extend(element, {\n        children: children\n      });\n    }\n\n    return transform(element);\n  };\n}\n\nfunction getDescendantsOfType(element, type) {\n  return getDescendants(element).filter(function (descendant) {\n    return descendant.type === type;\n  });\n}\n\nfunction getDescendants(element) {\n  var descendants = [];\n  visitDescendants(element, function (descendant) {\n    descendants.push(descendant);\n  });\n  return descendants;\n}\n\nfunction visitDescendants(element, visit) {\n  if (element.children) {\n    element.children.forEach(function (child) {\n      visitDescendants(child, visit);\n      visit(child);\n    });\n  }\n}","map":{"version":3,"sources":["C:/Users/Carlos/Desktop/Coding/doc-to-html/node_modules/mammoth/lib/transforms.js"],"names":["_","require","exports","paragraph","run","_elements","elements","getDescendantsOfType","getDescendants","transform","elementsOfType","elementType","element","type","transformElement","children","map","extend","filter","descendant","descendants","visitDescendants","push","visit","forEach","child"],"mappings":"AAAA,IAAIA,CAAC,GAAGC,OAAO,CAAC,YAAD,CAAf;;AAEAC,OAAO,CAACC,SAAR,GAAoBA,SAApB;AACAD,OAAO,CAACE,GAAR,GAAcA,GAAd;AACAF,OAAO,CAACG,SAAR,GAAoBC,QAApB;AACAJ,OAAO,CAACK,oBAAR,GAA+BA,oBAA/B;AACAL,OAAO,CAACM,cAAR,GAAyBA,cAAzB;;AAEA,SAASL,SAAT,CAAmBM,SAAnB,EAA8B;AAC1B,SAAOC,cAAc,CAAC,WAAD,EAAcD,SAAd,CAArB;AACH;;AAED,SAASL,GAAT,CAAaK,SAAb,EAAwB;AACpB,SAAOC,cAAc,CAAC,KAAD,EAAQD,SAAR,CAArB;AACH;;AAED,SAASC,cAAT,CAAwBC,WAAxB,EAAqCF,SAArC,EAAgD;AAC5C,SAAOH,QAAQ,CAAC,UAASM,OAAT,EAAkB;AAC9B,QAAIA,OAAO,CAACC,IAAR,KAAiBF,WAArB,EAAkC;AAC9B,aAAOF,SAAS,CAACG,OAAD,CAAhB;AACH,KAFD,MAEO;AACH,aAAOA,OAAP;AACH;AACJ,GANc,CAAf;AAOH;;AAED,SAASN,QAAT,CAAkBG,SAAlB,EAA6B;AACzB,SAAO,SAASK,gBAAT,CAA0BF,OAA1B,EAAmC;AACtC,QAAIA,OAAO,CAACG,QAAZ,EAAsB;AAClB,UAAIA,QAAQ,GAAGf,CAAC,CAACgB,GAAF,CAAMJ,OAAO,CAACG,QAAd,EAAwBD,gBAAxB,CAAf;;AACAF,MAAAA,OAAO,GAAGZ,CAAC,CAACiB,MAAF,CAASL,OAAT,EAAkB;AAACG,QAAAA,QAAQ,EAAEA;AAAX,OAAlB,CAAV;AACH;;AACD,WAAON,SAAS,CAACG,OAAD,CAAhB;AACH,GAND;AAOH;;AAGD,SAASL,oBAAT,CAA8BK,OAA9B,EAAuCC,IAAvC,EAA6C;AACzC,SAAOL,cAAc,CAACI,OAAD,CAAd,CAAwBM,MAAxB,CAA+B,UAASC,UAAT,EAAqB;AACvD,WAAOA,UAAU,CAACN,IAAX,KAAoBA,IAA3B;AACH,GAFM,CAAP;AAGH;;AAED,SAASL,cAAT,CAAwBI,OAAxB,EAAiC;AAC7B,MAAIQ,WAAW,GAAG,EAAlB;AAEAC,EAAAA,gBAAgB,CAACT,OAAD,EAAU,UAASO,UAAT,EAAqB;AAC3CC,IAAAA,WAAW,CAACE,IAAZ,CAAiBH,UAAjB;AACH,GAFe,CAAhB;AAIA,SAAOC,WAAP;AACH;;AAED,SAASC,gBAAT,CAA0BT,OAA1B,EAAmCW,KAAnC,EAA0C;AACtC,MAAIX,OAAO,CAACG,QAAZ,EAAsB;AAClBH,IAAAA,OAAO,CAACG,QAAR,CAAiBS,OAAjB,CAAyB,UAASC,KAAT,EAAgB;AACrCJ,MAAAA,gBAAgB,CAACI,KAAD,EAAQF,KAAR,CAAhB;AACAA,MAAAA,KAAK,CAACE,KAAD,CAAL;AACH,KAHD;AAIH;AACJ","sourcesContent":["var _ = require(\"underscore\");\n\nexports.paragraph = paragraph;\nexports.run = run;\nexports._elements = elements;\nexports.getDescendantsOfType = getDescendantsOfType;\nexports.getDescendants = getDescendants;\n\nfunction paragraph(transform) {\n    return elementsOfType(\"paragraph\", transform);\n}\n\nfunction run(transform) {\n    return elementsOfType(\"run\", transform);\n}\n\nfunction elementsOfType(elementType, transform) {\n    return elements(function(element) {\n        if (element.type === elementType) {\n            return transform(element);\n        } else {\n            return element;\n        }\n    });\n}\n\nfunction elements(transform) {\n    return function transformElement(element) {\n        if (element.children) {\n            var children = _.map(element.children, transformElement);\n            element = _.extend(element, {children: children});\n        }\n        return transform(element);\n    };\n}\n\n\nfunction getDescendantsOfType(element, type) {\n    return getDescendants(element).filter(function(descendant) {\n        return descendant.type === type;\n    });\n}\n\nfunction getDescendants(element) {\n    var descendants = [];\n\n    visitDescendants(element, function(descendant) {\n        descendants.push(descendant);\n    });\n\n    return descendants;\n}\n\nfunction visitDescendants(element, visit) {\n    if (element.children) {\n        element.children.forEach(function(child) {\n            visitDescendants(child, visit);\n            visit(child);\n        });\n    }\n}\n"]},"metadata":{},"sourceType":"script"}