{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hex = exports.dec = exports.codePoint = void 0;\n\nvar dingbats_1 = __importDefault(require(\"./dingbats\"));\n\nvar dingbatsByCodePoint = {};\nvar fromCodePoint = String.fromCodePoint ? String.fromCodePoint : fromCodePointPolyfill;\n\nfor (var _i = 0, dingbats_2 = dingbats_1.default; _i < dingbats_2.length; _i++) {\n  var dingbat = dingbats_2[_i];\n  var codePoint_1 = parseInt(dingbat[\"Unicode dec\"], 10);\n  var scalarValue = {\n    codePoint: codePoint_1,\n    string: fromCodePoint(codePoint_1)\n  };\n  dingbatsByCodePoint[dingbat[\"Typeface name\"].toUpperCase() + \"_\" + dingbat[\"Dingbat dec\"]] = scalarValue;\n}\n\nfunction codePoint(typeface, codePoint) {\n  return dingbatsByCodePoint[typeface.toUpperCase() + \"_\" + codePoint];\n}\n\nexports.codePoint = codePoint;\n\nfunction dec(typeface, dec) {\n  return codePoint(typeface, parseInt(dec, 10));\n}\n\nexports.dec = dec;\n\nfunction hex(typeface, hex) {\n  return codePoint(typeface, parseInt(hex, 16));\n}\n\nexports.hex = hex;\n\nfunction fromCodePointPolyfill(codePoint) {\n  if (codePoint <= 0xFFFF) {\n    // BMP\n    return String.fromCharCode(codePoint);\n  } else {\n    // Astral\n    // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n    var highSurrogate = Math.floor((codePoint - 0x10000) / 0x400) + 0xD800;\n    var lowSurrogate = (codePoint - 0x10000) % 0x400 + 0xDC00;\n    return String.fromCharCode(highSurrogate, lowSurrogate);\n  }\n}\n\n;","map":{"version":3,"sources":["C:/Users/Carlos/Desktop/Coding/doc-to-html/node_modules/dingbat-to-unicode/dist/index.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","hex","dec","codePoint","dingbats_1","require","dingbatsByCodePoint","fromCodePoint","String","fromCodePointPolyfill","_i","dingbats_2","default","length","dingbat","codePoint_1","parseInt","scalarValue","string","toUpperCase","typeface","fromCharCode","highSurrogate","Math","floor","lowSurrogate"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;AACnE,SAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;AAAE,eAAWA;AAAb,GAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACG,GAAR,GAAcH,OAAO,CAACI,SAAR,GAAoB,KAAK,CAArD;;AACA,IAAIC,UAAU,GAAGV,eAAe,CAACW,OAAO,CAAC,YAAD,CAAR,CAAhC;;AACA,IAAIC,mBAAmB,GAAG,EAA1B;AACA,IAAIC,aAAa,GAAGC,MAAM,CAACD,aAAP,GAAuBC,MAAM,CAACD,aAA9B,GAA8CE,qBAAlE;;AACA,KAAK,IAAIC,EAAE,GAAG,CAAT,EAAYC,UAAU,GAAGP,UAAU,CAACQ,OAAzC,EAAkDF,EAAE,GAAGC,UAAU,CAACE,MAAlE,EAA0EH,EAAE,EAA5E,EAAgF;AAC5E,MAAII,OAAO,GAAGH,UAAU,CAACD,EAAD,CAAxB;AACA,MAAIK,WAAW,GAAGC,QAAQ,CAACF,OAAO,CAAC,aAAD,CAAR,EAAyB,EAAzB,CAA1B;AACA,MAAIG,WAAW,GAAG;AACdd,IAAAA,SAAS,EAAEY,WADG;AAEdG,IAAAA,MAAM,EAAEX,aAAa,CAACQ,WAAD;AAFP,GAAlB;AAIAT,EAAAA,mBAAmB,CAACQ,OAAO,CAAC,eAAD,CAAP,CAAyBK,WAAzB,KAAyC,GAAzC,GAA+CL,OAAO,CAAC,aAAD,CAAvD,CAAnB,GAA6FG,WAA7F;AACH;;AACD,SAASd,SAAT,CAAmBiB,QAAnB,EAA6BjB,SAA7B,EAAwC;AACpC,SAAOG,mBAAmB,CAACc,QAAQ,CAACD,WAAT,KAAyB,GAAzB,GAA+BhB,SAAhC,CAA1B;AACH;;AACDJ,OAAO,CAACI,SAAR,GAAoBA,SAApB;;AACA,SAASD,GAAT,CAAakB,QAAb,EAAuBlB,GAAvB,EAA4B;AACxB,SAAOC,SAAS,CAACiB,QAAD,EAAWJ,QAAQ,CAACd,GAAD,EAAM,EAAN,CAAnB,CAAhB;AACH;;AACDH,OAAO,CAACG,GAAR,GAAcA,GAAd;;AACA,SAASD,GAAT,CAAamB,QAAb,EAAuBnB,GAAvB,EAA4B;AACxB,SAAOE,SAAS,CAACiB,QAAD,EAAWJ,QAAQ,CAACf,GAAD,EAAM,EAAN,CAAnB,CAAhB;AACH;;AACDF,OAAO,CAACE,GAAR,GAAcA,GAAd;;AACA,SAASQ,qBAAT,CAA+BN,SAA/B,EAA0C;AACtC,MAAIA,SAAS,IAAI,MAAjB,EAAyB;AACrB;AACA,WAAOK,MAAM,CAACa,YAAP,CAAoBlB,SAApB,CAAP;AACH,GAHD,MAIK;AACD;AACA;AACA,QAAImB,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACrB,SAAS,GAAG,OAAb,IAAwB,KAAnC,IAA4C,MAAhE;AACA,QAAIsB,YAAY,GAAG,CAACtB,SAAS,GAAG,OAAb,IAAwB,KAAxB,GAAgC,MAAnD;AACA,WAAOK,MAAM,CAACa,YAAP,CAAoBC,aAApB,EAAmCG,YAAnC,CAAP;AACH;AACJ;;AACD","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hex = exports.dec = exports.codePoint = void 0;\nvar dingbats_1 = __importDefault(require(\"./dingbats\"));\nvar dingbatsByCodePoint = {};\nvar fromCodePoint = String.fromCodePoint ? String.fromCodePoint : fromCodePointPolyfill;\nfor (var _i = 0, dingbats_2 = dingbats_1.default; _i < dingbats_2.length; _i++) {\n    var dingbat = dingbats_2[_i];\n    var codePoint_1 = parseInt(dingbat[\"Unicode dec\"], 10);\n    var scalarValue = {\n        codePoint: codePoint_1,\n        string: fromCodePoint(codePoint_1),\n    };\n    dingbatsByCodePoint[dingbat[\"Typeface name\"].toUpperCase() + \"_\" + dingbat[\"Dingbat dec\"]] = scalarValue;\n}\nfunction codePoint(typeface, codePoint) {\n    return dingbatsByCodePoint[typeface.toUpperCase() + \"_\" + codePoint];\n}\nexports.codePoint = codePoint;\nfunction dec(typeface, dec) {\n    return codePoint(typeface, parseInt(dec, 10));\n}\nexports.dec = dec;\nfunction hex(typeface, hex) {\n    return codePoint(typeface, parseInt(hex, 16));\n}\nexports.hex = hex;\nfunction fromCodePointPolyfill(codePoint) {\n    if (codePoint <= 0xFFFF) {\n        // BMP\n        return String.fromCharCode(codePoint);\n    }\n    else {\n        // Astral\n        // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        var highSurrogate = Math.floor((codePoint - 0x10000) / 0x400) + 0xD800;\n        var lowSurrogate = (codePoint - 0x10000) % 0x400 + 0xDC00;\n        return String.fromCharCode(highSurrogate, lowSurrogate);\n    }\n}\n;\n"]},"metadata":{},"sourceType":"script"}